1.yargs
    https://segmentfault.com/a/1190000006227402
2.stf -> 用yargs实现的命令行工具
    ./lib/cli/index.js

command
可以把它们都看作传递一个module给yargs，这个module必须导出四个变量
cmd, desc [builder], [handler]，其中builder和handler是方法，另外两个是字符串

3.local -> 运行本地服务器

option方法允许将所有的配置写入配置对象
yargs默认使用两个--作为参数的前缀，中间使用空格或者=都可以

bluebird 一个Promise类库 用于执行

关于ZeroMQ：zmq的socket模式： req、rep、push、pull、pub、sub、router、dealer
1、请求和应答
req和rep也就是请求回应模型，req和rep都可以请求和回答，不同的只是req是先send再rec，rep是先rec再send。支持N个请求端一个接收端，也支持N个接收端一个请求端。N个接收端采用rr负载均衡。 哪个是“一”端，哪个就bind端口，“N”端就只能connect，所以，req+rep无论谁bind端口，肯定要有一个是“一”。
router和dealer就是随时可以发送和接收的req和rep，看起来router+dealer跟 req+rep属于同类功能。
因为router和dealer可以随时发送接收，所以它们可以用来做路由。
一个router用来响应N个req，然后它在响应处理的时候，再通过另一个socket把请求扔出去，接收者是另外的M个rep，这就做到N:M。
2、订阅和推送
pub和sub就是发布者和订阅者。
3、推和拉
push和pull就是管道，一个只推数据，一个只拉数据。

/*******************************************/

以下模块都可以在handler中找到对应路径
app指web部分，device指手机部分
triproxy
	ZeroMQ 消息队列，dealer，pub，pull，参数：'tcp://127.0.0.1:7111' 只是连接
processor
	ZeroMQ 在app和device端的链接ip dealer 
	向db和appdealer发送设备参数
reaper
	ZeroMQ bindDevPull，bindAppPub
provider
一个provider模块，包含以下参数
        'device'
      , '--serial', device.id
      , '--provider', argv.name
      , '--screen-port', ports.shift()
      , '--connect-port', ports.shift()
      , '--vnc-port', ports.shift()
      , '--public-ip', argv.publicIp
      , '--group-timeout', argv.groupTimeout
      , '--storage-url', argv.storageUrl
      , '--adb-host', argv.adbHost
      , '--adb-port', argv.adbPort
      , '--screen-jpeg-quality', argv.screenJpegQuality
      , '--screen-ping-interval', argv.screenPingInterval
      , '--screen-ws-url-pattern', argv.screenWsUrlPattern
      , '--connect-url-pattern', argv.connectUrlPattern
      , '--heartbeat-interval', argv.heartbeatInterval
      , '--boot-complete-timeout', argv.bootCompleteTimeout
      , '--vnc-initial-size', argv.vncInitialSize.join('x')
      , '--mute-master', argv.muteMaster
auth-
协议 包括'mock', 'ldap', 'oauth2', 'saml2', 'openid'
在units/auth/下
app
app部分 /units/app web服务器主模块，使用express框架，在units/app/index.js总启动web服务器
api
接口部分 主要提供用户部分接口，包括获取设备等，可以参考unit/api/swagger下的文档
websocket
数据交互，包括传输数据的格式和路由
storage-
storage-plugin-image
storage-plugin-apk
存储部分，包括s3和temp两种。有上传和下载
poorxy
即proxy，服务端内部路由

/*******************************************/

未在local中运行：device 设备相关操作
resources下用于安装apk，minicap等
support 提供util和其它组件，例如adb
plugin 主要逻辑实现 包括screen和touch

web端相关：按键事件在res/app/components/stf/screen/screen-directive中


